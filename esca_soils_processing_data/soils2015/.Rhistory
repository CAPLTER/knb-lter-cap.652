scc.notes,
scc.cal_texture_fw,
scc.cal_temp,
scc.cal_r05,
scc.cal_r1,
scc.cal_t1,
scc.cal_r90,
scc.cal_t90,
scc.cal_r1440,
scc.cal_t1440,
scc.cal_run_date
FROM
survey200.sampling_events se
JOIN survey200.sites s ON se.site_id = s.site_id
JOIN survey200.soil_samples ss ON se.survey_id = ss.survey_id
JOIN survey200.soil_center_cores scc ON ss.soil_sample_id = scc.soil_sample_id
ORDER BY
EXTRACT (YEAR FROM se.samp_date),
s.site_code;"
soil_center_cores_query <- sqlInterpolate(ANSI(),
soil_center_cores_base_query)
soil_center_cores_data <- dbGetQuery(pg, soil_center_cores_query)
return(soil_center_cores_data)
}
get_soil_center_cores()
View(get_soil_center_cores())
# clean up
if (dbExistsTable(pg, c('survey200', 'temp_lachat'))) dbRemoveTable(pg, c('survey200', 'temp_lachat')) # clean up
# clean up
if (dbExistsTable(pg, c('survey200', 'soil_traacs'))) dbRemoveTable(pg, c('survey200', 'soil_traacs')) # clean up
# function to import raw lachat data and perform minor processing
tidy_raw_lachat <- function(datafile) {
if(grepl("x", file_ext(datafile))) {
lachatData <- read_excel(datafile)
} else {
lachatData <- read_csv(datafile)
}
lachatData <- lachatData %>%
mutate(
`Detection Date` = as.Date(`Detection Date`, format = '%m/%d/%Y'),
code_layer = str_extract(`Sample ID`, '^(\\S{2,4})\\s(TOP|BOT)')
) %>%
separate(code_layer, into = c("site_code", "deep_core_type"), sep = " ") %>%
rename_all(tolower) %>%
rename(weight_units = `weight (units)`)
colnames(lachatData) <- gsub(" ", "\\_", colnames(lachatData)) # sp to underscore
return(lachatData)
}
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015/s200_lachat_2015")
raw_lachat_nitrogen <- bind_rows(
tidy_raw_lachat('OM_6-8-2016_09-51-57AM.csv'),
tidy_raw_lachat('OM_6-16-2016_10-50-00AM.csv')
) %>%
mutate(site_code = gsub("017", "O17", site_code)) %>%
left_join(availableNitrogen[,c("site_code", "deep_core_type", "soil_fresh_weight_n", "extract_volume_n")],
by = c("site_code", "deep_core_type")) %>%
left_join(soilSamples[,c("soil_sample_id", "site_code")],
by = c("site_code")) %>%
select(soil_sample_id, deep_core_type, sample_id:conc_x_adf_x_mdf) %>%
rename(determined_conc = determined_conc.)
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015")
availableNitrogen <- read_excel('s200 2015 avail N.xlsx') %>% # sheet D
separate(col = `Sample ID`, into = c("site_code", "deep_core_type"), sep = " ") %>%
rename(
soil_fresh_weight_n = `Soil fresh wt (g)`,
extract_volume_n = `Extractant vol (ml)`,
nitrate_nitrogen = `Nitrate/Nitrite (mg/L)`,
ammonia = `Ammonia (mg/L)`
)
View(availableNitrogen)
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015/s200_lachat_2015")
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015")
phosphorus <- read_excel('S200 2015 SRP.xlsx') %>% # sheet J
separate(col = Sample, into = c("site_code", "deep_core_type"), sep = " ") %>%
rename(
soil_fresh_weight_p = `Weight (g)`,
extract_volume_p = `Extractant Vol (ml)`,
phosphate = `ug P/L`
) %>%
mutate(site_code = replace(site_code, site_code == 'J6', 'J9')) # see README
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015/s200_lachat_2015")
raw_lachat_nitrogen <- bind_rows(
tidy_raw_lachat('OM_6-8-2016_09-51-57AM.csv'),
tidy_raw_lachat('OM_6-16-2016_10-50-00AM.csv')
) %>%
mutate(site_code = gsub("017", "O17", site_code)) %>%
left_join(availableNitrogen[,c("site_code", "deep_core_type", "soil_fresh_weight_n", "extract_volume_n")],
by = c("site_code", "deep_core_type")) %>%
left_join(soilSamples[,c("soil_sample_id", "site_code")],
by = c("site_code")) %>%
select(soil_sample_id, deep_core_type, sample_id:conc_x_adf_x_mdf) %>%
rename(determined_conc = determined_conc.)
# postgres ----
source('~/Documents/localSettings/pg_prod.R')
pg <- pg_prod
soilSamples <- dbGetQuery(pg, "
SELECT
ss.soil_sample_id,
ss.survey_id,
se.samp_date,
sites.site_code,
ss.location_description,
ss.sampling_notes,
ss.location_description_center
FROM
survey200.soil_samples ss
JOIN survey200.sampling_events se ON (se.survey_id = ss.survey_id)
JOIN survey200.sites ON (sites.site_id = se.site_id)
WHERE
EXTRACT (YEAR FROM se.samp_date) = 2015;") %>%
mutate(site_code = str_sub(site_code, 1, str_length(site_code) - 1)) # strip off the trailing 1
raw_lachat_nitrogen <- bind_rows(
tidy_raw_lachat('OM_6-8-2016_09-51-57AM.csv'),
tidy_raw_lachat('OM_6-16-2016_10-50-00AM.csv')
) %>%
mutate(site_code = gsub("017", "O17", site_code)) %>%
left_join(availableNitrogen[,c("site_code", "deep_core_type", "soil_fresh_weight_n", "extract_volume_n")],
by = c("site_code", "deep_core_type")) %>%
left_join(soilSamples[,c("soil_sample_id", "site_code")],
by = c("site_code")) %>%
select(soil_sample_id, deep_core_type, sample_id:conc_x_adf_x_mdf) %>%
rename(determined_conc = determined_conc.)
View(raw_lachat_nitrogen)
raw_lachat_phosphorus <- bind_rows(
tidy_raw_lachat('OM_9-27-2016_10-33-40AM.csv'),
tidy_raw_lachat('OM_9-28-2016_09-55-27AM.csv'),
tidy_raw_lachat('OM_9-29-2016_09-27-40AM.csv')
) %>%
mutate(site_code = replace(site_code, site_code == 'J6', 'J9')) %>%
left_join(phosphorus[,c("site_code", "deep_core_type", "soil_fresh_weight_p", "extract_volume_p")],
by = c("site_code", "deep_core_type")) %>%
left_join(soilSamples[,c("soil_sample_id", "site_code")],
by = c("site_code")) %>%
select(soil_sample_id, deep_core_type, sample_id:conc_x_adf_x_mdf) %>%
rename(determined_conc = determined_conc.)
View(availableNitrogen)
View(raw_lachat_phosphorus)
insert_lachat_2015_query <- '
INSERT INTO survey200.soil_lachat (
soil_sample_id,
deep_core_type,
sample_id,
sample_type,
replicate_number,
repeat_number,
cup_number,
manual_dilution_factor,
auto_dilution_factor,
weight_units,
weight,
units,
detection_date,
detection_time,
user_name,
run_file_name,
description,
channel_number,
analyte_name,
peak_concentration,
determined_conc,
concentration_units,
peak_area,
peak_height,
calibration_equation,
retention_time,
inject_to_peak_start,
conc_x_adf,
conc_x_mdf,
conc_x_adf_x_mdf,
survey_year
)
(
SELECT
soil_sample_id,
deep_core_type,
sample_id,
sample_type,
replicate_number,
repeat_number,
cup_number,
manual_dilution_factor,
auto_dilution_factor,
weight_units,
weight,
units,
detection_date,
detection_time,
user_name,
run_file_name,
description,
channel_number,
analyte_name,
peak_concentration,
determined_conc,
concentration_units,
peak_area,
peak_height,
calibration_equation,
retention_time,
inject_to_peak_start,
conc_x_adf,
conc_x_mdf,
conc_x_adf_x_mdf,
2015
FROM survey200.temp_lachat
);'
dataname <- raw_lachat_nitrogen
if (dbExistsTable(pg, c('survey200', 'temp_lachat'))) dbRemoveTable(pg, c('survey200', 'temp_lachat')) # make sure tbl does not exist
dbWriteTable(pg, c('survey200', 'temp_lachat'), value = dataname, row.names = F)
# insert data
dbExecute(pg, insert_lachat_2015_query)
dataname <- raw_lachat_phosphorus
if (dbExistsTable(pg, c('survey200', 'temp_lachat'))) dbRemoveTable(pg, c('survey200', 'temp_lachat')) # make sure tbl does not exist
dbWriteTable(pg, c('survey200', 'temp_lachat'), value = dataname, row.names = F)
# insert data
dbExecute(pg, insert_lachat_2015_query)
# clean up
if (dbExistsTable(pg, c('survey200', 'temp_lachat'))) dbRemoveTable(pg, c('survey200', 'temp_lachat')) # clean up
dbExecute(pg,'
CREATE TABLE survey200.soil_traacs
(
id serial,
soil_sample_id integer,
deep_core_type text,
sample_sequence integer,
sample_id text,
sample_set integer,
phos_mg_l double precision
)
WITH (
OIDS=FALSE
);')
dbExecute(pg,'comment on table survey200.soil_traacs is \'raw 2010 phosphorus pieced together from traacs output\';')
insert_traacs_2010_query <- '
INSERT INTO survey200.soil_traacs (
soil_sample_id,
deep_core_type,
sample_sequence,
sample_id,
sample_set,
phos_mg_l
)
(
SELECT
soil_sample_id,
deep_core_type,
sample_sequence,
sample_id,
sample_set,
phos_mg_l
FROM survey200.temp_traacs
);'
# insert data
dbExecute(pg, insert_traacs_2010_query)
# clean up
if (dbExistsTable(pg, c('survey200', 'temp_traacs'))) dbRemoveTable(pg, c('survey200', 'temp_traacs')) # clean up
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015")
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015")
bulkDensity <- read_excel('s200 2015 bulk density.xlsx', sheet = 1, skip = 1) %>% # sheet E
mutate(site = replace(site, site == 'Z9', 'V9')) # V9 presumably mislabeled as Z9
coreMoistureContent <- read_excel('s200 2015 bulk density.xlsx', sheet = 2, skip = 1) %>% # sheet F
mutate(site = replace(site, site == 'Z9', 'V9')) # V9 presumably mislabeled as Z9
phCond <- read_excel('s200 2015 soil pH and conductivity.xls', skip = 2) %>% # sheet G
mutate(Site = replace(Site, Site == 'Z9', 'V9')) # V9 presumably mislabeled as Z9
texture <- read_excel('S200 2015 Soil Texture Analysis.xlsx') %>% # sheet I
mutate(`Sample#` = replace(`Sample#`, `Sample#` == 'Z9', 'V9')) %>% # V9 presumably mislabeled as Z9
mutate(cal_texture_fw = case_when(grepl("blk", `Bottle#`) ~ `Weight g`)) %>%
mutate(cal_temp = case_when(grepl("blk", `Bottle#`) ~ `CÂ°`)) %>%
mutate(cal_r05 = case_when(grepl("blk", `Bottle#`) ~ R0.5)) %>%
mutate(cal_r1 = case_when(grepl("blk", `Bottle#`) ~ R1)) %>%
mutate(cal_t1 = case_when(grepl("blk", `Bottle#`) ~ T1)) %>%
mutate(cal_r90 = case_when(grepl("blk", `Bottle#`) ~ R90)) %>%
mutate(cal_t90 = case_when(grepl("blk", `Bottle#`) ~ T90)) %>%
mutate(cal_r1440 = case_when(grepl("blk", `Bottle#`) ~ R1440)) %>%
mutate(cal_t1440 = case_when(grepl("blk", `Bottle#`) ~ T1440)) %>%
mutate(cal_run_date = case_when(grepl("blk", `Bottle#`) ~ `Date Analyzed`))
# fill NAs between blanks
texture <- texture %>%
mutate(cal_texture_fw = zoo::na.locf(cal_texture_fw, fromLast = T)) %>%
mutate(cal_temp = zoo::na.locf(cal_temp, fromLast = T)) %>%
mutate(cal_r05 = zoo::na.locf(cal_r05, fromLast = T)) %>%
mutate(cal_r1 = zoo::na.locf(cal_r1, fromLast = T)) %>%
mutate(cal_t1 = zoo::na.locf(cal_t1, fromLast = T)) %>%
mutate(cal_r90 = zoo::na.locf(cal_r90, fromLast = T)) %>%
mutate(cal_t90 = zoo::na.locf(cal_t90, fromLast = T)) %>%
mutate(cal_r1440 = zoo::na.locf(cal_r1440, fromLast = T)) %>%
mutate(cal_t1440 = zoo::na.locf(cal_t1440, fromLast = T)) %>%
mutate(cal_run_date = zoo::na.locf(cal_run_date, fromLast = T))
# now we can remove the blank rows
texture <- texture %>%
filter(!grepl("blank", `Sample#`))
center_cores <-
inner_join(soilSamples[,c("soil_sample_id", "site_code")], bulkDensity[,c(1,3:7)], by = c("site_code" = "site")) %>%
inner_join(phCond[,c(1,3:4)], by = c("site_code" = "Site")) %>%
inner_join(coreMoistureContent[,c(1:6)], by = c("site_code" = "site")) %>%
inner_join(texture[,c(1,3:24)], by = c("site_code" = "Sample#"))
View(center_cores)
View(phCond)
View(soilSamples)
View(phCond)
View(bulkDensity)
View(phosphorus)
if (dbExistsTable(pg, c('survey200', 'center_cores'))) dbRemoveTable(pg, c('survey200', 'center_cores'))
dbWriteTable(pg, c('survey200', 'center_cores'), value = center_cores, row.names = F)
View(pg)
inner_join(phCond, phosphorus, by = c('site_code'))
inner_join(phCond, phosphorus, by = c('Site'= 'site_code'))
right_join(phCond, phosphorus, by = c('Site'= 'site_code'))
View(right_join(phCond, phosphorus, by = c('Site'= 'site_code')))
insert_center_cores_query <-
'INSERT INTO survey200.soil_center_cores
(
soil_sample_id,
core_height_cm,
soil_bulkdensity_fw,
dw_more_2_mm,
dw_less_2_mm,
plant_matter,
conductivity,
ph_value,
pan,
pan_plus_fw,
pan_plus_dw60,
pan_plus_dw105,
soil_texture_fw,
temperature,
r05,
r1,
t1,
r90,
t90,
r1440,
t1440,
notes,
cal_texture_fw,
cal_temp,
cal_r05,
cal_r1,
cal_t1,
cal_r90,
cal_t90,
cal_r1440,
cal_t1440,
cal_run_date
)
(
SELECT
soil_sample_id,
"height (cm)",
"fresh wt (g)",
"dry wt (>2mm)",
"dry wt (<2mm)",
"veg matter (g)",
"conductivity (mS)",
"pH",
"pan tare (g)",
"pan + soil wt (g)",
"pan + dry soil (g)",
"pan + dry soil (g)__1",
"Weight g",
"CÂ°",
"R0.5",
"R1",
"T1",
"R90",
"T90",
"R1440",
"T1440",
"Notes",
cal_texture_fw,
cal_temp,
cal_r05,
cal_r1,
cal_t1,
cal_r90,
cal_t90,
cal_r1440,
cal_t1440,
cal_run_date
FROM survey200.center_cores
);'
dbSendQuery(pg, insert_center_cores_query)
# clean up
if (dbExistsTable(pg, c('survey200', 'center_cores'))) dbRemoveTable(pg, c('survey200', 'center_cores'))
setwd("~/Dropbox/development/survey200/esca_soils/s200_2015")
perimeterMoistureContent <- read_excel('s200 2015 core samples.xls', sheet = 2, skip = 2) %>% # sheet A
separate(col = sample, into = c("site_code", "deep_core_type"), sep = " ") %>%
select(-`pan #`, -contains("%"), -contains(":")) %>%
rename(
pan_weight = `pan wt`,
pan_fresh_soil = `pan +  fr soil`,
pan_dry_soil = `pan + dry soil`,
pan_ashed_soil = `pan + dry soil__1`
)
availableNitrogen <- read_excel('s200 2015 avail N.xlsx') %>% # sheet D
separate(col = `Sample ID`, into = c("site_code", "deep_core_type"), sep = " ") %>%
rename(
soil_fresh_weight_n = `Soil fresh wt (g)`,
extract_volume_n = `Extractant vol (ml)`,
nitrate_nitrogen = `Nitrate/Nitrite (mg/L)`,
ammonia = `Ammonia (mg/L)`
)
phosphorus <- read_excel('S200 2015 SRP.xlsx') %>% # sheet J
separate(col = Sample, into = c("site_code", "deep_core_type"), sep = " ") %>%
rename(
soil_fresh_weight_p = `Weight (g)`,
extract_volume_p = `Extractant Vol (ml)`,
phosphate = `ug P/L`
) %>%
mutate(site_code = replace(site_code, site_code == 'J6', 'J9')) # see README
carbonNitrogen <- read_excel('S200 2015 CN.xlsx') %>% # sheet H
mutate(`Sample ID` = str_replace(`Sample ID`, "\\*", "")) %>%
separate(col = `Sample ID`, into = c("site_code", "deep_core_type"), sep = " ") %>%
mutate(deep_core_type = trimws(deep_core_type, which = "both")) %>%
select(-contains("X")) %>%
rename(
soil_fresh_weight_cn = `Weight (mg)`,
percent_total_c = `% Total C`,
percent_inorganic_c = `% Inorg C`,
percent_total_n = `% Total N`
)
perimeter_cores <-
right_join(soilSamples[,c("soil_sample_id", "site_code")], perimeterMoistureContent, by = c("site_code")) %>%
inner_join(availableNitrogen, by = c("site_code", "deep_core_type")) %>%
inner_join(phosphorus, by = c("site_code", "deep_core_type")) %>%
inner_join(carbonNitrogen, by = c("site_code", "deep_core_type")) %>%
mutate(deep_core_type = ifelse(grepl("B", deep_core_type, ignore.case = T), "bottom", "top"))
View(perimeter_cores)
View(phosphorus)
View(perimeterMoistureContent)
View(availableNitrogen)
View(phosphorus)
View(carbonNitrogen)
View(perimeterMoistureContent)
View(perimeter_cores)
right_join(soilSamples[,c("soil_sample_id", "site_code")], perimeterMoistureContent, by = c("site_code")) %>%
inner_join(availableNitrogen, by = c("site_code", "deep_core_type")) %>%
inner_join(phosphorus, by = c("site_code", "deep_core_type")) %>%
inner_join(carbonNitrogen, by = c("site_code", "deep_core_type")) %>%
mutate(deep_core_type = ifelse(grepl("B", deep_core_type, ignore.case = T), "bottom", "top")) %>%
filter(site_code %in% c('F18', 'AB12'))
right_join(soilSamples[,c("soil_sample_id", "site_code")], perimeterMoistureContent, by = c("site_code")) %>%
inner_join(availableNitrogen, by = c("site_code", "deep_core_type")) %>%
inner_join(phosphorus, by = c("site_code", "deep_core_type")) %>%
inner_join(carbonNitrogen, by = c("site_code", "deep_core_type")) %>%
mutate(deep_core_type = ifelse(grepl("B", deep_core_type, ignore.case = T), "bottom", "top")) %>%
filter(site_code !%in% c('F18', 'AB12'))
right_join(soilSamples[,c("soil_sample_id", "site_code")], perimeterMoistureContent, by = c("site_code")) %>%
inner_join(availableNitrogen, by = c("site_code", "deep_core_type")) %>%
inner_join(phosphorus, by = c("site_code", "deep_core_type")) %>%
inner_join(carbonNitrogen, by = c("site_code", "deep_core_type")) %>%
mutate(deep_core_type = ifelse(grepl("B", deep_core_type, ignore.case = T), "bottom", "top")) %>%
filter(!site_code %in% c('F18', 'AB12'))
perimeter_cores <-
right_join(soilSamples[,c("soil_sample_id", "site_code")], perimeterMoistureContent, by = c("site_code")) %>%
inner_join(availableNitrogen, by = c("site_code", "deep_core_type")) %>%
inner_join(phosphorus, by = c("site_code", "deep_core_type")) %>%
inner_join(carbonNitrogen, by = c("site_code", "deep_core_type")) %>%
mutate(deep_core_type = ifelse(grepl("B", deep_core_type, ignore.case = T), "bottom", "top")) %>%
filter(!site_code %in% c('F18', 'AB12')) # unable to resolve the true identity of F18 and AB12 so they will have to be removed
View(perimeter_cores)
View(perimeter_cores)
if (dbExistsTable(pg, c('survey200', 'perimeter_cores'))) dbRemoveTable(pg, c('survey200', 'perimeter_cores'))
dbWriteTable(pg, c('survey200', 'perimeter_cores'), value = perimeter_cores, row.names = F)
insert_perimeter_cores_query <-
'INSERT INTO survey200.soil_perimeter_cores
(
soil_sample_id,
deep_core_type,
pan,
pan_plus_fw,
pan_plus_dw60,
pan_plus_aw,
soil_n_fw,
n_extract_volume,
nh4_n,
no3_n,
soil_p_fw,
p_extract_volume,
po4_p,
percent_total_c,
percent_inorg_c,
percent_total_n
)
(
SELECT
soil_sample_id,
deep_core_type,
pan_weight,
pan_fresh_soil,
pan_dry_soil,
pan_ashed_soil,
soil_fresh_weight_n,
extract_volume_n,
ammonia,
nitrate_nitrogen,
soil_fresh_weight_p,
extract_volume_p,
phosphate,
percent_total_c,
percent_inorganic_c,
percent_total_n
FROM survey200.perimeter_cores
);'
dbSendQuery(pg, insert_perimeter_cores_query)
dbExecute(pg,'
ALTER TABLE survey200.soil_perimeter_cores
ALTER COLUMN no3_n TYPE DOUBLE PRECISION;')
dbSendQuery(pg, insert_perimeter_cores_query)
# clean up
if (dbExistsTable(pg, c('survey200', 'center_cores'))) dbRemoveTable(pg, c('survey200', 'center_cores'))
q()
